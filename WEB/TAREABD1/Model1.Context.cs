//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TAREABD1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Tarea1_BDEntities : DbContext
    {
        public Tarea1_BDEntities()
            : base("name=Tarea1_BDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Beneficiario> Beneficiarios { get; set; }
        public virtual DbSet<Cuenta> Cuentas { get; set; }
        public virtual DbSet<Parentezco> Parentezcos { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TipoCuentaAhorro> TipoCuentaAhorros { get; set; }
        public virtual DbSet<TipoDocuIdentidad> TipoDocuIdentidads { get; set; }
        public virtual DbSet<TipoMoneda> TipoMonedas { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Usuarios_Ver> Usuarios_Ver { get; set; }
    
        public virtual int ACTUALIZAR_PERSONA_BENEFICIARIO(Nullable<int> numeroCuenta, Nullable<int> valorDocu, string nombre, Nullable<int> iDParentezco, Nullable<int> porcentaje, Nullable<System.DateTime> fechaNacimiento, string email, Nullable<int> telefono1, Nullable<int> telefono2)
        {
            var numeroCuentaParameter = numeroCuenta.HasValue ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(int));
    
            var valorDocuParameter = valorDocu.HasValue ?
                new ObjectParameter("ValorDocu", valorDocu) :
                new ObjectParameter("ValorDocu", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var iDParentezcoParameter = iDParentezco.HasValue ?
                new ObjectParameter("IDParentezco", iDParentezco) :
                new ObjectParameter("IDParentezco", typeof(int));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefono1Parameter = telefono1.HasValue ?
                new ObjectParameter("Telefono1", telefono1) :
                new ObjectParameter("Telefono1", typeof(int));
    
            var telefono2Parameter = telefono2.HasValue ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACTUALIZAR_PERSONA_BENEFICIARIO", numeroCuentaParameter, valorDocuParameter, nombreParameter, iDParentezcoParameter, porcentajeParameter, fechaNacimientoParameter, emailParameter, telefono1Parameter, telefono2Parameter);
        }
    
        public virtual ObjectResult<BENEFICIARIO_POR_CUENTA2_Result> BENEFICIARIO_POR_CUENTA2(Nullable<int> numeroCuenta, Nullable<int> valorDocuBene)
        {
            var numeroCuentaParameter = numeroCuenta.HasValue ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(int));
    
            var valorDocuBeneParameter = valorDocuBene.HasValue ?
                new ObjectParameter("ValorDocuBene", valorDocuBene) :
                new ObjectParameter("ValorDocuBene", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BENEFICIARIO_POR_CUENTA2_Result>("BENEFICIARIO_POR_CUENTA2", numeroCuentaParameter, valorDocuBeneParameter);
        }
    
        public virtual ObjectResult<BENEFICIARIOS_POR_CUENTA_Result> BENEFICIARIOS_POR_CUENTA(Nullable<int> numCuenta)
        {
            var numCuentaParameter = numCuenta.HasValue ?
                new ObjectParameter("NumCuenta", numCuenta) :
                new ObjectParameter("NumCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BENEFICIARIOS_POR_CUENTA_Result>("BENEFICIARIOS_POR_CUENTA", numCuentaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CHECK_PORCENTAJES2(Nullable<int> numCuenta)
        {
            var numCuentaParameter = numCuenta.HasValue ?
                new ObjectParameter("NumCuenta", numCuenta) :
                new ObjectParameter("NumCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CHECK_PORCENTAJES2", numCuentaParameter);
        }
    
        public virtual ObjectResult<CUENTAS_POR_USUARIO_Result> CUENTAS_POR_USUARIO(string inUser)
        {
            var inUserParameter = inUser != null ?
                new ObjectParameter("InUser", inUser) :
                new ObjectParameter("InUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CUENTAS_POR_USUARIO_Result>("CUENTAS_POR_USUARIO", inUserParameter);
        }
    
        public virtual int ELIMINAR_BENEFICIARIO(Nullable<int> numeroCuenta, Nullable<int> documentoBene)
        {
            var numeroCuentaParameter = numeroCuenta.HasValue ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(int));
    
            var documentoBeneParameter = documentoBene.HasValue ?
                new ObjectParameter("DocumentoBene", documentoBene) :
                new ObjectParameter("DocumentoBene", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINAR_BENEFICIARIO", numeroCuentaParameter, documentoBeneParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_NUMERO_BENEFICIARIOS(Nullable<int> inNumCuenta)
        {
            var inNumCuentaParameter = inNumCuenta.HasValue ?
                new ObjectParameter("inNumCuenta", inNumCuenta) :
                new ObjectParameter("inNumCuenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_NUMERO_BENEFICIARIOS", inNumCuentaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> INICIO_SESION2(string uSER, string pASS)
        {
            var uSERParameter = uSER != null ?
                new ObjectParameter("USER", uSER) :
                new ObjectParameter("USER", typeof(string));
    
            var pASSParameter = pASS != null ?
                new ObjectParameter("PASS", pASS) :
                new ObjectParameter("PASS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("INICIO_SESION2", uSERParameter, pASSParameter);
        }
    
        public virtual int INSERTAR_BENEFICIARIO(Nullable<int> inNumCuenta, Nullable<int> inValorDocuIdentidadBeneficiario, Nullable<int> inParentezcoId, Nullable<int> inPorcentaje)
        {
            var inNumCuentaParameter = inNumCuenta.HasValue ?
                new ObjectParameter("inNumCuenta", inNumCuenta) :
                new ObjectParameter("inNumCuenta", typeof(int));
    
            var inValorDocuIdentidadBeneficiarioParameter = inValorDocuIdentidadBeneficiario.HasValue ?
                new ObjectParameter("inValorDocuIdentidadBeneficiario", inValorDocuIdentidadBeneficiario) :
                new ObjectParameter("inValorDocuIdentidadBeneficiario", typeof(int));
    
            var inParentezcoIdParameter = inParentezcoId.HasValue ?
                new ObjectParameter("inParentezcoId", inParentezcoId) :
                new ObjectParameter("inParentezcoId", typeof(int));
    
            var inPorcentajeParameter = inPorcentaje.HasValue ?
                new ObjectParameter("inPorcentaje", inPorcentaje) :
                new ObjectParameter("inPorcentaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTAR_BENEFICIARIO", inNumCuentaParameter, inValorDocuIdentidadBeneficiarioParameter, inParentezcoIdParameter, inPorcentajeParameter);
        }
    
        public virtual int RESET_TABLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RESET_TABLE");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
